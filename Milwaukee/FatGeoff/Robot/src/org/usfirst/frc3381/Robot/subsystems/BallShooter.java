// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3381.Robot.subsystems;

import org.usfirst.frc3381.Robot.RobotMap;
import org.usfirst.frc3381.Robot.commands.*;

import com.ctre.CANTalon;
import com.ctre.CANTalon.TalonControlMode;
import edu.wpi.first.wpilibj.command.Subsystem;
import com.ctre.CANTalon.FeedbackDevice;
import com.ctre.CANTalon.TalonControlMode;


/**
 *
 */
public class BallShooter extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final CANTalon ballShooterMotor = RobotMap.ballShooterBallShooterMotor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    }
    
    
    public void setPIDF(Double P, Double I, Double D, Double F){
    	
    	ballShooterMotor.setProfile(0);
    	ballShooterMotor.setP(P);
    	ballShooterMotor.setI(I);
    	ballShooterMotor.setD(D);
    	ballShooterMotor.setF(F);
    	
 	}
    
    
    public int getRPM(){
    	
    	return ballShooterMotor.getEncVelocity();
    	
    }
    
    public void setShooterRPM(Double rpm){
    	
    	ballShooterMotor.set(rpm);
    	
    }
    
    public double getRPMPreset(){
    	
    	return RobotMap.prefs.getDouble( "RPM", 100.0);
    	
    }
    
    public double getPPreset(){
    	
    	return RobotMap.prefs.getDouble( "P", 3.41);
    	
    }
    
    public double getIPreset(){
    	
    	return RobotMap.prefs.getDouble( "I", 0.0341);
    	
    }
    
 public double getDPreset(){
    	
    	return RobotMap.prefs.getDouble( "D", 34.1);
    	
    }
    
 public double getFPreset(){
 	
 	return RobotMap.prefs.getDouble( "F", 3.265);
 	
 }
 
 
}

