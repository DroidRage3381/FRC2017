// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3381.Robot.subsystems;

import org.usfirst.frc3381.Robot.RobotMap;
import org.usfirst.frc3381.Robot.commands.*;

import com.kauailabs.navx.frc.AHRS;

import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class DriveTrain extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController leftSide = RobotMap.driveTrainLeftSide;
    private final SpeedController rightSide = RobotMap.driveTrainRightSide;
    private final RobotDrive robotDrive21 = RobotMap.driveTrainRobotDrive21;
    private final Encoder driveTrain = RobotMap.driveTraindriveTrain;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final AHRS navx = RobotMap.navx;

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new CommandDrive());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
    public void arcadeDrive(Joystick stick){
    	
    	double rotate = -stick.getX();
    	double move = stick.getY();
    	
    	robotDrive21.arcadeDrive(move, rotate, true);
    	
    }
    
    public void driveWithValues ( double moveValue , double rotateValue){
    	
    	robotDrive21.arcadeDrive(moveValue, rotateValue);
    
    }
    
    public void setToCero (){
    	
    	leftSide.set(0);
    	rightSide.set(0);
    	
    }
    
    public void resetEncoder (){
    	
    	driveTrain.reset();
    	
    }
    
    public void resetYaw(){
    	
    	navx.reset();
    	
    }
    
    public double getDistance (){
    	
    	return driveTrain.getDistance();
    	
    }
    
    public double getHeading(){
    	
    	return navx.getAngle();
    	
    }
    
    
}

